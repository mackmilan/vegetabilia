package br.com.sapientia.vegetabilia.views;

import br.com.sapientia.vegetabilia.controllers.EstoqueController;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.VerticalLayout;

public class EstoqueView extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private HorizontalSplitPanel hsp1;

	@AutoGenerated
	private MainMenu mainMenu_1;

	public static final String NAME = "Estoque";

	private EstoqueController controller = new EstoqueController();

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public EstoqueView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@Override
	public void enter(ViewChangeEvent event) {
		// TODO Auto-generated method stub

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// mainMenu_1
		mainMenu_1 = new MainMenu();
		mainMenu_1.setImmediate(false);
		mainMenu_1.setWidth("100.0%");
		mainLayout.addComponent(mainMenu_1,
				"top:0.0px;right:10.0px;left:0.0px;");

		// hsp1
		hsp1 = buildHsp1();
		mainLayout.addComponent(hsp1, "top:23.0px;left:0.0px;");

		return mainLayout;
	}

	@AutoGenerated
	private HorizontalSplitPanel buildHsp1() {
		// common part: create layout
		hsp1 = new HorizontalSplitPanel();
		hsp1.setImmediate(false);
		hsp1.setWidth("100.0%");
		hsp1.setHeight("98.0%");

		VerticalLayout vl1 = new VerticalLayout();
		vl1.setSizeFull();
		vl1.setMargin(true);
		hsp1.addComponent(vl1);

		vl1.addComponent(controller.buildEstoque());

		return hsp1;
	}

}
